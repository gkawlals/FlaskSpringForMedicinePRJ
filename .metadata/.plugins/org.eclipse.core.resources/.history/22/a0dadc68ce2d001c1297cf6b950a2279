package poly.service.impl;

import java.io.File;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.springframework.stereotype.Service;
import org.springframework.ui.ModelMap;

import poly.dto.OcrDTO;
import poly.persistance.mapper.IOcrMapper;
import poly.service.IMainService;
import poly.util.CmmUtil;
import poly.util.UrlUtil;

@Service("MainService")
public class MainService implements IMainService{
	
	@Resource(name="OcrMapper")
	private IOcrMapper ocrMapper;
	
	// 로그 파일 생성 및 로그 출력을 위한 log4j 프레임워크의 자바 객체
	private Logger log = Logger.getLogger(this.getClass());

	/**
	 * 이미지 파일로부터 문자 읽어 오기
	 * 
	 * @param pDTO 이미지 파일 정보
	 * @return pDTO 이미지로부터 읽은 문자열
	 */
	
	@Override
	public OcrDTO AddMedicine(OcrDTO pDTO) throws Exception {
		log.info(this.getClass().getName() + ".getFoodInfoFromWEB start!");

		File imageFile = new File(CmmUtil.nvl(pDTO.getFilePath()) + "//" + CmmUtil.nvl(pDTO.getFileName()));

		//문자열 인식 결과를  DB에 저장
		ocrMapper.InsertOcrInfo(pDTO);
		
		log.info(this.getClass().getName() + ".getFoodInfoFromWEB End!");

		return pDTO;
	}

	@Override
	public List<OcrDTO> getApiFlask(OcrDTO pDTO) throws Exception {
		
		UrlUtil uu = new UrlUtil();
		String url = "http://127.0.0.1:8001";
        String api = "/App2Test";
        String pName = "?Filename=";
        String Filename = pDTO.getFilePath();
		
        String res = uu.urlReadforString(url + api + pName + URLEncoder.encode(Filename,"UTF-8"));
        
        log.info("File Path : " + res);
        
        uu = null;
        
        // json parsing
        
        JSONParser parser = new JSONParser();
        
        JSONObject json = (JSONObject) parser.parse(res);
        
        List<String> rList = (List<String>)json.get("word");
        
        if(rList == null) {
        	rList = new ArrayList<String>();
        }
        
        Iterator<String> it = rList.iterator();
        
        while(it.hasNext()) {
        	String word = (String) it.next();
        	if(word.endsWith("주")) {
        		log.info("word : "+ word);
        		rList.add(word);
        	}else if (word.endsWith("정")){
        		log.info("word : "+ word);
        		rList.add(word);
        	}else if (word.endsWith("복)")){
        		log.info("word : "+ word);
        		rList.add(word);
        	}else if (word.endsWith("급여)")){
        		log.info("word : "+ word);
        		rList.add(word);
        	}else if (word.endsWith("비")){
        		log.info("word : "+ word);
        		rList.add(word);
        	}else if (word.endsWith("100")){
        		log.info("word : "+ word + "밀리그램");
        		rList.add(word);
        	}else if (word.endsWith("150")){
        		log.info("word : "+ word + "밀리그램");
        		rList.add(word);
        	}else if (word.endsWith("200")){
        		log.info("word : "+ word+ "밀리그램");
        		rList.add(word);
        	}else if (word.endsWith("250")){
        		log.info("word : "+ word + "밀리그램");
        		rList.add(word);
        	}
        	
        }
        log.info("Medicien List : " + rList);
        
		return rList;
		
	}

}
